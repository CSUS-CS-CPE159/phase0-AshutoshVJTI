-[spede] ~/phase0-AshutoshVJTI/02-debugging {main *%=}
22:24:41 $ make
Done linking "build/MyOS.dli" (with GDB enabled) at 1m.
-[spede] ~/phase0-AshutoshVJTI/02-debugging {main *%=}
22:24:59 $ spede-run -d
The SPEDE Target will be reset, are you sure? (y/n) y
Resetting the SPEDE Target...
Downloading image 'build/MyOS.dli' to SPEDE Target via /dev/pts/1...
File type is 'ELF'
Total blocks to download:  0x83  (128 bytes each)

Load Successful ; Code loaded at 0x0x101000 (2104 bytes/sec)
Executing the image 'build/MyOS.dli' on the SPEDE Target with GDB Enabled
Launching GDB...
Reading symbols from build/MyOS.dli...
Expanding full symbols from build/MyOS.dli...
Remote debugging using /dev/pts/1
0x00102685 in breakpoint ()
Temporary breakpoint 1 at 0x101206: file src/main.c, line 38.

Temporary breakpoint 1, main () at src/main.c:38
38	    char buf[128] = {0};
SPEDE GDB$ y
Undefined command: "y".  Try "help".
SPEDE GDB$ continue
Continuing.
Hello, world!
Welcome to MyOS!
NULL pointer!
The buffer size is 17 bytes
NULL pointer!
CPE/CSC 159 for Spring/Fall 1970 will be fun!
[Inferior 1 (Remote target) exited normally]
SPEDE GDB$ break puts
Breakpoint 2 at 0x10119b: file src/main.c, line 22.
SPEDE GDB$ info break
Num     Type           Disp Enb Address    What
2       breakpoint     keep y   0x0010119b in puts at src/main.c:22
SPEDE GDB$ continue
The program is not being run.
SPEDE GDB$ exit
-[spede] ~/phase0-AshutoshVJTI/02-debugging {main *%=}
22:26:14 $ spede-run -d
The SPEDE Target will be reset, are you sure? (y/n) y
Resetting the SPEDE Target...
Downloading image 'build/MyOS.dli' to SPEDE Target via /dev/pts/1...
File type is 'ELF'
Total blocks to download:  0x83  (128 bytes each)

Load Successful ; Code loaded at 0x0x101000 (2404 bytes/sec)
Executing the image 'build/MyOS.dli' on the SPEDE Target with GDB Enabled
Launching GDB...
Reading symbols from build/MyOS.dli...
Expanding full symbols from build/MyOS.dli...
Remote debugging using /dev/pts/1
0x00102685 in breakpoint ()
Temporary breakpoint 1 at 0x101206: file src/main.c, line 38.

Temporary breakpoint 1, main () at src/main.c:38
38	    char buf[128] = {0};
SPEDE GDB$ break puts
Breakpoint 2 at 0x10119b: file src/main.c, line 22.
SPEDE GDB$ info break
Num     Type           Disp Enb Address    What
2       breakpoint     keep y   0x0010119b in puts at src/main.c:22
SPEDE GDB$ continue
Continuing.
Hello, world!
Welcome to MyOS!

Breakpoint 2, puts (str=0x10422f "Hello, World!\n") at src/main.c:22
22	    if (str) {
SPEDE GDB$ list
17	/**
18	 * Prints a string to the screen starting at 0, 0
19	 * @param str pointer to the string to print
20	 */
21	void puts(char *str) {
22	    if (str) {
23	        printf("NULL pointer!\n");
24	        return;
25	    }
26	
SPEDE GDB$ print str
$1 = 0x10422f "Hello, World!\n"
SPEDE GDB$ step
23	        printf("NULL pointer!\n");
SPEDE GDB$ step
NULL pointer!
24	        return;
SPEDE GDB$ continue
Continuing.
The buffer size is 17 bytes

Breakpoint 2, puts (str=0x10dfc "welcome to MyOS!\n") at src/main.c:22
22	    if (str) {
SPEDE GDB$ jump +3
Continuing at 0x1011b3.
CPE/CSC 159 for Spring/Fall 1970 will be fun!
[Inferior 1 (Remote target) exited normally]
